//import React from "react";
//import * as ReactDOM from 'react-dom/client';
//const root = ReactDOM.createRoot(
//  document.getElementById('root')
//);
//const Component = () => {

//  const complexHTML = ' <!DOCTYPE html> <html lang="en"> <head> <meta charset="utf-8"> <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no"> <meta name="theme-color" content="#000000"> <base href="%PUBLIC_URL%/" /> <!-- manifest.json provides metadata used when your web app is added to the homescreen on Android. See https://developers.google.com/web/fundamentals/engage-and-retain/web-app-manifest/ --> <link rel="manifest" href="%PUBLIC_URL%/manifest.json"> <link rel="shortcut icon" href="%PUBLIC_URL%/favicon.ico"> <link rel="stylesheet" href="%PUBLIC_URL%/css/grapes.min.css"> <link rel="stylesheet" href="%PUBLIC_URL%/css/grapesjs-preset-newsletter.css"> <link rel="stylesheet" href="%PUBLIC_URL%/css/grapesjs-preset-webpage.min.css"> <link rel="stylesheet" href="%PUBLIC_URL%/style/material.css"> <link rel="stylesheet" href="%PUBLIC_URL%/style/tooltip.css"> <link rel="stylesheet" href="%PUBLIC_URL%/style/toastr.min.css">  <script src="//ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script> <script src="%PUBLIC_URL%/js/grapes.min.js"></script>     <style> body, html { height: 100%; margin: 0; }  .icons-flex { background-size: 70% 65% !important; height: 15px; width: 17px; opacity: 0.9; }  .icon-dir-row { background: url("./img/flex-dir-row.png") no-repeat center; }  .icon-dir-row-rev { background: url("./img/flex-dir-row-rev.png") no-repeat center; }  .icon-dir-col { background: url("./img/flex-dir-col.png") no-repeat center; }  .icon-dir-col-rev { background: url("./img/flex-dir-col-rev.png") no-repeat center; }  .icon-just-start { background: url("./img/flex-just-start.png") no-repeat center; }  .icon-just-end { background: url("./img/flex-just-end.png") no-repeat center; }  .icon-just-sp-bet { background: url("./img/flex-just-sp-bet.png") no-repeat center; }  .icon-just-sp-ar { background: url("./img/flex-just-sp-ar.png") no-repeat center; }  .icon-just-sp-cent { background: url("./img/flex-just-sp-cent.png") no-repeat center; }  .icon-al-start { background: url("./img/flex-al-start.png") no-repeat center; }  .icon-al-end { background: url("./img/flex-al-end.png") no-repeat center; }  .icon-al-str { background: url("./img/flex-al-str.png") no-repeat center; }  .cke_panel { display: flex; justify-content: center; }  .icon-al-center { background: url("./img/flex-al-center.png") no-repeat center; }  [data-tooltip]::after { background: rgba(51, 51, 51, 0.9); }  .gjs-pn-commands { min-height: 40px; }  #gjs-sm-float { display: none; }  .gjs-logo-version { background-color: #756467; }  .gjs-pn-btn.gjs-pn-active { box-shadow: none; color: #35d7bb; }  .CodeMirror { min-height: 450px; margin-bottom: 8px; }  .grp-handler-close { background-color: transparent; color: #ddd; }  .grp-handler-cp-wrap { border-color: transparent; }  .dropdown-container { text-align: left; border: 1px solid #ccc; position: relative; border-radius: 5px; width: 300px; }  .dropdown-input { padding: 5px; display: block; align-items: center; justify-content: space-between; user-select: none; color: black !important; }  .others { color: black !important; }  .englishlangicon { background-image: url(images/royaume-uni.png); background-repeat: no-repeat; background-position: center center; padding-left: 50px }  .frenchlangicon { background-image: url(images/france.png); background-repeat: no-repeat; background-position: center center; padding-left: 50px }  .sauvegardericon { background-image: url(images/sauvegarde.png); background-repeat: no-repeat; background-position: center center; padding-left: 50px }  .dropdownicon { background-image: url(images/menu-deroulant.png); background-repeat: no-repeat; background-position: center left; padding-left: 50px; } </style> <title>GrapesJsHtmlEditor</title> </head>   <body> <div><input type="hidden" id="myHiddenField" name="myHiddenField"></div> <div id="root" style="height:0px; overflow:hidden;">  </div>  <script>  function getPageParameters() { const url = window.location.href; const dd = window.location.pathname;  if (url.includes("get")) {  const age = 30;  fetch(url, { method: "GET", headers: { "Content-Type": "application/json", "Authorization": "Bearer YOUR_AUTH_TOKEN", "X-User-Age": age, }, })   .then(response => response.text()) .then(data => {  editor.setComponents(data); alert(data); });  }  }          </script> <script type="text/javascript">  window.onload = () => { window.editor = grapesjs.init({ container: "#root", fromElement: true, plugins: [  "gjs-blocks-basic", "grapesjs-plugin-forms", "grapesjs-component-countdown", "grapesjs-plugin-export", "grapesjs-tabs", "grapesjs-custom-code", "grapesjs-touch", "grapesjs-parser-postcss", "grapesjs-tooltip", "grapesjs-tui-image-editor", "grapesjs-typed", "grapesjs-typed", "grapesjs-style-bg", "grapesjs-preset-webpage", "gjs-plugin-ckeditor"  ], pluginsOpts: { "gjs-blocks-basic": { flexGrid: true }, "grapesjs-tui-image-editor": { script: [ "https://cdnjs.cloudflare.com/ajax/libs/fabric.js/1.6.7/fabric.min.js", "https://uicdn.toast.com/tui.code-snippet/v1.5.2/tui-code-snippet.min.js", "https://uicdn.toast.com/tui-color-picker/v2.2.7/tui-color-picker.min.js", "https://uicdn.toast.com/tui-image-editor/v3.15.2/tui-image-editor.min.js" ], style: [ "https://uicdn.toast.com/tui-color-picker/v2.2.7/tui-color-picker.min.css", "https://uicdn.toast.com/tui-image-editor/v3.15.2/tui-image-editor.min.css", ], }, "grapesjs-tabs": { tabsBlock: { category: "Extra" } }, "grapesjs-typed": { block: { category: "Extra", content: { type: "typed", "type-speed": 40, strings: [ "Text row one", "Text row two", "Text row three", ], } } }, "grapesjs-preset-webpage": {   },  "grapesjs-plugin-export": {  },  "gjs-plugin-ckeditor": { options: { language: "fr", extraPlugins: "colorbutton,colordialog", autoParagraph: false, enterMode: 2, toolbar: [ { name: "styles", items: ["Format"] }, { name: "basicstyles", items: ["Bold", "Italic", "Underline", "Strike"], }, { name: "paragraph", items: ["NumberedList", "BulletedList", "-", "Outdent", "Indent", "-", "Blockquote"] }, { name: "colors", items: ["TextColor", "BGColor"] }, { name: "clipboard", items: ["Undo", "Redo"] }, ] } }, },  styleManager: { sectors: [{ name: "General", open: false, buildProps: ["float", "display", "position", "top", "right", "left", "bottom"] }, { name: "Flex", open: false, buildProps: ["flex-direction", "flex-wrap", "justify-content", "align-items", "align-content", "order", "flex-basis", "flex-grow", "flex-shrink", "align-self"] }, { name: "Dimension", open: false, buildProps: ["width", "height", "max-width", "min-height", "margin", "padding"], }, { name: "Typography", open: false, buildProps: ["font-family", "font-size", "font-weight", "letter-spacing", "color", "line-height", "text-shadow"], }, { name: "Decorations", open: false, buildProps: ["border-radius-c", "background-color", "border-radius", "border", "box-shadow", "background"], }, { name: "Extra", open: false, buildProps: ["transition", "perspective", "transform"], } ], },   });  editor.Panels.addButton("options", [{ id: "options-toggle", className: "dropdownicon", command: "toggle-options", attributes: { title: "Champs de fusion", id: "optionschamp", name: "optionschamp", class: "dropdown-container", onchange: "submitForm()" }, tagName: "select", traits: ["name", "value"],  }]);      editor.Commands.add("toggle-options", {  run(editor) {   $.ajax({ type: "GET", url: "LoadListChamp",  success: function (jsonData) { var data = JSON.stringify(jsonData);    var dropdownList = $("#optionschamp"); var dropdownHtml = jsonData; $("#optionschamp").html(dropdownHtml);  dropdownList.bind();  },  }); }, });    editor.Panels.addButton("options", [{ id: "htmlEn", className: "englishlangicon", command: "htmlEn", attributes: { title: "charger le contenu en anglais" }  }]);  editor.Commands.add("htmlEn", { run: function (editor) {  fetch("TransEn") .then(response => response.text()) .then(data => { editor.setComponents([]); editor.setComponents(data);  });  } }); editor.Panels.addButton("options", [{ id: "htmlFr", className: "frenchlangicon", command: "htmlFr", attributes: { title: "Charger le contenu en fran ais" }  }]);   editor.Commands.add("htmlFr", { run: function (editor) {  fetch("TransFr") .then(response => response.text()) .then(data => { editor.setComponents([]); editor.setComponents(data);  });  } }); editor.Panels.addButton("options", [{ id: "export", className: "sauvegardericon", command: "export", attributes: { title: "Sauvegarder en base" } }]); editor.Commands.add("export", {    run: function (editor) { const url = window.location.href; if (url.includes("getcamp")) { const designData2 = editor.getHtml(); const data2 = { Fichier: designData2, FichierUs: designData2,  }; fetch("/SaveCamp/", { method: "post", headers: { "Content-Type": "application/json" }, body: JSON.stringify(data2) }) .then(response => response.json()) .then(data2 => { alert(`New user added: ${data2.Description}`); });   }  else { const designData = editor.getHtml(); const data = { ContenuFr: designData, ContenuUs: designData,  };   fetch("/Save/", { method: "post", headers: { "Content-Type": "application/json" }, body: JSON.stringify(data) }) .then(response => response.json()) .then(data => { alert(`New user added: ${data.Description}`); }); } }     });  editor.on("load", getPageParameters); };  </script>  <script src="https://unpkg.com/grapesjs-preset-webpage@1.0.2"></script> <script src="https://unpkg.com/grapesjs-blocks-basic@1.0.1"></script> <script src="https://unpkg.com/grapesjs-plugin-forms@2.0.5"></script> <script src="https://unpkg.com/grapesjs-component-countdown@1.0.1"></script> <script src="https://unpkg.com/grapesjs-plugin-export@1.0.11"></script> <script src="https://unpkg.com/grapesjs-tabs@1.0.6"></script> <script src="https://unpkg.com/grapesjs-custom-code@1.0.1"></script> <script src="https://unpkg.com/grapesjs-touch@0.1.1"></script> <script src="https://unpkg.com/grapesjs-parser-postcss@1.0.1"></script> <script src="https://unpkg.com/grapesjs-tooltip@0.1.7"></script> <script src="https://unpkg.com/grapesjs-tui-image-editor@0.1.3"></script> <script src="https://unpkg.com/grapesjs-typed@1.0.5"></script> <script src="https://unpkg.com/grapesjs-style-bg@2.0.1"></script> <script src="https://cdn.jsdelivr.net/npm/file-saver@2.0.5/dist/FileSaver.min.js"></script> <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script> <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script> <script src="https://code.jquery.com/jquery-3.6.3.js"></script> <script> function submitForm() { var dropdown = document.getElementById("optionschamp"); var selectedText = dropdown.options[dropdown.selectedIndex].text; navigator.clipboard.writeText("<strong>" + "{[" + selectedText + "]}" + "</strong>"); alert(`Le champ de fusion ${selectedText} est copi .`);  } </script> </body> </html>';
//  return (
//    <div dangerouslySetInnerHTML={{ __html: complexHTML }} />
//  );
//};
//const App = () => {
//  return (
//    <div Id="root">

//    </div>
//  );
//};


//export default App;
import React from "react";

import ReactDOM from "react-dom";
import App from "./App";


const el = document.getElementById("root");

ReactDOM.render(<App />, el);